services:
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zeroback-backend-dev
    ports:
      - "5000:5000"
    volumes:
      # 개발환경에서는 코드 변경사항을 실시간으로 반영
      - ./backend:/app
      # AI 모델과 데이터 볼륨
      - ./backend/models:/app/models:ro
      - ./backend/DATA:/app/DATA:ro
    networks:
      - zeroback-dev-network
    env_file:
      - .env
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=run.py
      - PYTHONPATH=/app
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
      # CORS 설정 (개발환경에서는 모든 origin 허용)
      - CORS_ORIGINS=*
      # 개발용 API 키들 (실제 키로 교체하거나 .env 파일 사용)
      # - WEATHER_API_KEY_ENCODE=your_weather_api_key_encode
      # - WEATHER_API_KEY_DECODE=your_weather_api_key_decode
      # - GEMINI_API_KEY=your_gemini_api_key
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend-dev:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: zeroback-frontend-dev
    ports:
      - "3000:80"
    volumes:
      - ./frontend/client/build:/usr/share/nginx/html:ro
    depends_on:
      backend-dev:
        condition: service_healthy
    networks:
      - zeroback-dev-network
    restart: unless-stopped

networks:
  zeroback-dev-network:
    driver: bridge
